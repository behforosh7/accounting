"""
Django settings for app project.

Generated by 'django-admin startproject' using Django 4.1.2.

For more information on this file, see
https://docs.djangoproject.com/en/4.1/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/4.1/ref/settings/
"""
import os
from pathlib import Path
from decouple import config
from Crypto.PublicKey import RSA
# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/4.1/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = config('SECRET_KEY')

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = config('DEBUG', cast=bool)
RSA_KEY = RSA.generate(2048)

ALLOWED_HOSTS = [config('WEB_HOST'),'*']
# ALLOWED_HOSTS = ['127.0.0.1',]
if not DEBUG:
    CSRF_TRUSTED_ORIGINS = ['https://act.shamimhost.ir','https://127.0.0.1','https://*']
CSRF_TRUSTED_ORIGINS = ['https://act.shamimhost.ir','https://127.0.0.1','https://*']
SECURE_PROXY_SSL_HEADER = ('HTTP_X_FORWARDED_PROTO', 'https')

LOG_SERVER_PORT=config('LOG_SERVER_PORT')
RADIUS_PORT=config('RADIUS_PORT')
RADIUS_SECRET=config('RADIUS_SECRET')
ACCOUNTING_PORT=config('ACCOUNTING_PORT')
MIKROTIK_IP=config('MIKROTIK_IP')
MIKROTIK_ADMIN_USER=config('MIKROTIK_ADMIN_USER')
MIKROTIK_ADMIN_PASSWORD=config('MIKROTIK_ADMIN_PASSWORD')
MIKROTIK_API_PORT=config('MIKROTIK_API_PORT')
# Application definition
PAYMENT_URL = config('PAYMENT_URL')
PYMENT_TERMINAL= config('PYMENT_TERMINAL')
PYMENT_MERCHANT= config('PYMENT_MERCHANT')
PYMENT_USERNAME= config('PYMENT_USERNAME')
PYMENT_PASSWORD= config('PYMENT_PASSWORD')
PYMENT_ACCOUNT= config('PYMENT_ACCOUNT')
PAYMENT_REDIRECT_URL= 'https://act.shamimhost.ir/accounts/paymentresult'
FIELD_ENCRYPTION_KEY =config('FIELD_ENCRYPTION_KEY')
SESSION_EXPIRE_AT_BROWSER_CLOSE = True
SESSION_COOKIE_AGE = 7200

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'django.contrib.humanize',
    'jalali_date',
    'captcha',
    'accounts',
    'main',
    'radiuslog',
    'decouple',
    'axes',
    'utils',
    'encrypted_model_fields',
]
AUTHENTICATION_BACKENDS = [
    # AxesStandaloneBackend should be the first backend in the AUTHENTICATION_BACKENDS list.
    # 'axes.backends.AxesStandaloneBackend',
    'main.views.MyBackend',

    # Django ModelBackend is the default authentication backend.
    'django.contrib.auth.backends.ModelBackend',
]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'utils.middleware.AddCustomCSRFToRequestMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
    'xff.middleware.XForwardedForMiddleware',
    'axes.middleware.AxesMiddleware',
    'utils.middleware.ForceChangePasswordMiddleware',
]

ROOT_URLCONF = 'app.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [BASE_DIR / 'templates'],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]
WSGI_APPLICATION = 'app.wsgi.application'
FORM_RENDERER = "django.forms.renderers.DjangoDivFormRenderer"

# Database
# https://docs.djangoproject.com/en/4.1/ref/settings/#databases

DATABASES = {
        'default': {
            'ENGINE': 'django.db.backends.postgresql',
            'NAME': config('DB_NAME'),
            'USER': config('DB_USER'),
            'PASSWORD': config('DB_PASSWORD'),
            'HOST': config('DB_HOST'),
            'PORT': config('DB_PORT'),
        },
    }


# Password validation
# https://docs.djangoproject.com/en/4.1/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },

]

    # {
    #     'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    # },
# Internationalization
# https://docs.djangoproject.com/en/4.1/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'Asia/Tehran'

USE_I18N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/4.1/howto/static-files/

STATIC_URL = 'static/'
STATIC_ROOT = BASE_DIR / 'statics'
MEDIA_URL = 'media/'
MEDIA_ROOT = BASE_DIR / 'media'
STATICFILES_DIRS = [
    BASE_DIR / 'static',
]
# # Default primary key field type
# https://docs.djangoproject.com/en/4.1/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'
AUTH_USER_MODEL = 'accounts.User'

SMS_API_USERNAME = config('SMS_API_USERNAME')
SMS_API_PASSWORD = config('SMS_API_PASSWORD')

FONT_PATH = STATIC_ROOT / "fonts/vazir/webfonts/Vazirmatn-FD-Light.woff2"
if os.path.exists(FONT_PATH):
    CAPTCHA_FONT_PATH = FONT_PATH
CAPTCHA_FONT_SIZE = 30
CAPTCHA_IMAGE_SIZE = (150, 40)
CAPTCHA_FOREGROUND_COLOR = "#99CCFF"
CAPTCHA_CHALLENGE_FUNCT = "accounts.helpers.captcha_challenge"
CAPTCHA_NOISE_FUNCTIONS = (
    "accounts.helpers.noise_arcs",
    "captcha.helpers.noise_dots",
)

AXES_FAILURE_LIMIT = 5
AXES_ENABLED = False
AXES_LOCKOUT_CALLABLE = "main.views.lockout"
AXES_LOCKOUT_URL = '/locked'
AXES_ENABLE_ACCESS_FAILURE_LOG = True
AXES_LOCK_OUT_AT_FAILURE = True
AXES_COOLOFF_TIME = 0.16  
# AXES_RESET_COOL_OFF_ON_FAILURE_DURING_LOCKOUT = False
# AXES_ONLY_USER_FAILURES = True
AXES_RESET_ON_SUCCESS = True
AXES_ENABLE_ACCESS_FAILURE_LOG = True
## custom account soft lockout message
##CUSTOM_AXES_SOFT_LOCKOUT_MESSAGE = 'Too many failed login attempts. Please try again in 5 minutes.'